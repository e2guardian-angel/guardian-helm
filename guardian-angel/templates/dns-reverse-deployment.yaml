apiVersion: apps/v1
kind: Deployment
metadata:
  name: dns-reverse
  labels:
    app: dns-reverse
spec:
  replicas: {{ .Values.reverseDnsReplicas }}
  selector:
    matchLabels:
      app: dns-reverse
  template:
    metadata:
      annotations:
        redispass/hash: {{ .Values.redisPassword | sha1sum | quote }}
{{- if eq .Values.safeSearchEnforced true }}
        safesearch/enforced: 'yes'
{{- else }}
        safesearch/enforced: 'no'
{{- end }}
      labels:
        app: dns-reverse
    spec:
      containers:
        - name: unbound
          image: 'jusschwa/unbound-reversecache:{{ .Values.releaseTag }}'
          ports:
            - containerPort: {{ .Values.publicDnsPort }}
              protocol: UDP
            - containerPort: {{ .Values.publicDnsPort }}
              protocol: TCP
          env:
            - name: REDIS_HOST
              value: '{{ .Values.redisHost }}'
            - name: REDIS_PORT
              value: '{{ .Values.redisPort }}'
{{- if .Values.safeSearchEnforced }}
            - name: SAFESEARCH
              value: 'yes'
{{- end }}
          envFrom:
            - secretRef:
                name: redis-pass
